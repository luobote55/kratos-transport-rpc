// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: fourth_party/gogogle/api/mqtt.proto

package anns

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Mqtt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules                        []*MqttRule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	FullyDecodeReservedExpansion bool        `protobuf:"varint,2,opt,name=fully_decode_reserved_expansion,json=fullyDecodeReservedExpansion,proto3" json:"fully_decode_reserved_expansion,omitempty"`
}

func (x *Mqtt) Reset() {
	*x = Mqtt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fourth_party_gogogle_api_mqtt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mqtt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mqtt) ProtoMessage() {}

func (x *Mqtt) ProtoReflect() protoreflect.Message {
	mi := &file_fourth_party_gogogle_api_mqtt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mqtt.ProtoReflect.Descriptor instead.
func (*Mqtt) Descriptor() ([]byte, []int) {
	return file_fourth_party_gogogle_api_mqtt_proto_rawDescGZIP(), []int{0}
}

func (x *Mqtt) GetRules() []*MqttRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *Mqtt) GetFullyDecodeReservedExpansion() bool {
	if x != nil {
		return x.FullyDecodeReservedExpansion
	}
	return false
}

type MqttRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selector string `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	// Types that are assignable to Pattern:
	//
	//	*MqttRule_Req
	//	*MqttRule_Upload
	Pattern            isMqttRule_Pattern `protobuf_oneof:"pattern"`
	Body               string             `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	ResponseBody       string             `protobuf:"bytes,5,opt,name=response_body,json=responseBody,proto3" json:"response_body,omitempty"`
	AdditionalBindings []*MqttRule        `protobuf:"bytes,6,rep,name=additional_bindings,json=additionalBindings,proto3" json:"additional_bindings,omitempty"`
}

func (x *MqttRule) Reset() {
	*x = MqttRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fourth_party_gogogle_api_mqtt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MqttRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MqttRule) ProtoMessage() {}

func (x *MqttRule) ProtoReflect() protoreflect.Message {
	mi := &file_fourth_party_gogogle_api_mqtt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MqttRule.ProtoReflect.Descriptor instead.
func (*MqttRule) Descriptor() ([]byte, []int) {
	return file_fourth_party_gogogle_api_mqtt_proto_rawDescGZIP(), []int{1}
}

func (x *MqttRule) GetSelector() string {
	if x != nil {
		return x.Selector
	}
	return ""
}

func (m *MqttRule) GetPattern() isMqttRule_Pattern {
	if m != nil {
		return m.Pattern
	}
	return nil
}

func (x *MqttRule) GetReq() string {
	if x, ok := x.GetPattern().(*MqttRule_Req); ok {
		return x.Req
	}
	return ""
}

func (x *MqttRule) GetUpload() string {
	if x, ok := x.GetPattern().(*MqttRule_Upload); ok {
		return x.Upload
	}
	return ""
}

func (x *MqttRule) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MqttRule) GetResponseBody() string {
	if x != nil {
		return x.ResponseBody
	}
	return ""
}

func (x *MqttRule) GetAdditionalBindings() []*MqttRule {
	if x != nil {
		return x.AdditionalBindings
	}
	return nil
}

type isMqttRule_Pattern interface {
	isMqttRule_Pattern()
}

type MqttRule_Req struct {
	Req string `protobuf:"bytes,2,opt,name=req,proto3,oneof"`
}

type MqttRule_Upload struct {
	Upload string `protobuf:"bytes,3,opt,name=upload,proto3,oneof"`
}

func (*MqttRule_Req) isMqttRule_Pattern() {}

func (*MqttRule_Upload) isMqttRule_Pattern() {}

var file_fourth_party_gogogle_api_mqtt_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*MqttRule)(nil),
		Field:         98756431,
		Name:          "gogogle.api.mqtt",
		Tag:           "bytes,98756431,opt,name=mqtt",
		Filename:      "fourth_party/gogogle/api/mqtt.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// See `HttpRule`.
	//
	// optional gogogle.api.MqttRule mqtt = 98756431;
	E_Mqtt = &file_fourth_party_gogogle_api_mqtt_proto_extTypes[0]
)

var File_fourth_party_gogogle_api_mqtt_proto protoreflect.FileDescriptor

var file_fourth_party_gogogle_api_mqtt_proto_rawDesc = []byte{
	0x0a, 0x23, 0x66, 0x6f, 0x75, 0x72, 0x74, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x71, 0x74, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x67, 0x6f, 0x67, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a, 0x04, 0x4d, 0x71, 0x74, 0x74, 0x12, 0x2b, 0x0a, 0x05,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f,
	0x67, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x71, 0x74, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x1f, 0x66, 0x75, 0x6c,
	0x6c, 0x79, 0x5f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1c, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0xe0, 0x01, 0x0a, 0x08, 0x4d, 0x71, 0x74, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x03, 0x72, 0x65, 0x71,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x46, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x67, 0x6f, 0x67, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x71, 0x74, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x3a, 0x4c, 0x0a, 0x04, 0x6d, 0x71, 0x74, 0x74, 0x12, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xcf, 0xce, 0x8b, 0x2f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x67, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4d, 0x71, 0x74, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x6d, 0x71, 0x74,
	0x74, 0x42, 0x21, 0x5a, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3b, 0x61, 0x6e, 0x6e, 0x73, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x04,
	0x47, 0x41, 0x50, 0x49, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fourth_party_gogogle_api_mqtt_proto_rawDescOnce sync.Once
	file_fourth_party_gogogle_api_mqtt_proto_rawDescData = file_fourth_party_gogogle_api_mqtt_proto_rawDesc
)

func file_fourth_party_gogogle_api_mqtt_proto_rawDescGZIP() []byte {
	file_fourth_party_gogogle_api_mqtt_proto_rawDescOnce.Do(func() {
		file_fourth_party_gogogle_api_mqtt_proto_rawDescData = protoimpl.X.CompressGZIP(file_fourth_party_gogogle_api_mqtt_proto_rawDescData)
	})
	return file_fourth_party_gogogle_api_mqtt_proto_rawDescData
}

var file_fourth_party_gogogle_api_mqtt_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_fourth_party_gogogle_api_mqtt_proto_goTypes = []interface{}{
	(*Mqtt)(nil),                       // 0: gogogle.api.Mqtt
	(*MqttRule)(nil),                   // 1: gogogle.api.MqttRule
	(*descriptorpb.MethodOptions)(nil), // 2: google.protobuf.MethodOptions
}
var file_fourth_party_gogogle_api_mqtt_proto_depIdxs = []int32{
	1, // 0: gogogle.api.Mqtt.rules:type_name -> gogogle.api.MqttRule
	1, // 1: gogogle.api.MqttRule.additional_bindings:type_name -> gogogle.api.MqttRule
	2, // 2: gogogle.api.mqtt:extendee -> google.protobuf.MethodOptions
	1, // 3: gogogle.api.mqtt:type_name -> gogogle.api.MqttRule
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	3, // [3:4] is the sub-list for extension type_name
	2, // [2:3] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_fourth_party_gogogle_api_mqtt_proto_init() }
func file_fourth_party_gogogle_api_mqtt_proto_init() {
	if File_fourth_party_gogogle_api_mqtt_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fourth_party_gogogle_api_mqtt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mqtt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fourth_party_gogogle_api_mqtt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MqttRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_fourth_party_gogogle_api_mqtt_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*MqttRule_Req)(nil),
		(*MqttRule_Upload)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fourth_party_gogogle_api_mqtt_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_fourth_party_gogogle_api_mqtt_proto_goTypes,
		DependencyIndexes: file_fourth_party_gogogle_api_mqtt_proto_depIdxs,
		MessageInfos:      file_fourth_party_gogogle_api_mqtt_proto_msgTypes,
		ExtensionInfos:    file_fourth_party_gogogle_api_mqtt_proto_extTypes,
	}.Build()
	File_fourth_party_gogogle_api_mqtt_proto = out.File
	file_fourth_party_gogogle_api_mqtt_proto_rawDesc = nil
	file_fourth_party_gogogle_api_mqtt_proto_goTypes = nil
	file_fourth_party_gogogle_api_mqtt_proto_depIdxs = nil
}
